struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};
struct Node* searchNode(struct Node* root, int target) {
    // Base case: if the root is NULL or the target is found
    if (root == NULL || root->data == target) {
        return root;
    }

    if (target < root->data) {
        return searchNode(root->left, target);
    } else {
        return searchNode(root->right, target);
    }
}
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

int main()
    struct Node* root = createNode(5);
    root->left = createNode(3);
    root->right = createNode(7);
    root->left->left = createNode(2);
    root->left->right = createNode(4);
    root->right->left = createNode(6);
    root->right->right = createNode(8);

    int target = 4;
    struct Node* result = searchNode(root, target);

    if (result != NULL) {
        printf("Node with value %d found in the binary tree.\n", target);
    } else {
        printf("Node with value %d not found in the binary tree.\n", target);
    }

    return 0;
}

